 If you`ve ever pirated any software - and i know you have - then you might be familiar with keygens. They are small applications designed with only two functions: The first is to be deliver a serial number for you ill-goten program; And the second is to play some fantastic music. The question is - why? Why does software piracy have such a great soundtrack? Where does this music come from? And how is it made? The answer is something called a tracker. Trackers are a way of creating music on a computer that dates to the early 16-bit era, and there`s a lot more to them than just keygen music. Let me take you back to around 1984. It is the dawn of 16-bit computing. Apple released the Macintosh this year. IBM, the 286-based PC/AT. By 1985, the Atari ST and Commodore Amiga were available as well. These were all 16-bit machines, and they all boasted superior capabilities to 8-bit mictos like the Commodore 64 and ZX Spectrum. They were faster, with higher resolution graphics, more RAM, more storage - overall, a big step up. But perhaps one area in which these new machines were lacking was sound. IBMs were designed for an office environment, and the best they  could manage at the time was the PC speaker - harsh 1-bit tones. The Macintosh was great for desktop  publishing, with a superb graphical user interface and high-resolution monochrome display - but its sound was  underwhelming: a single channel governed by the video signal, and heavy on the CPU. The Atari ST was better, in  that it had a dedicated sound chip: the Yamaha YM2149. It had 3 tone channels with a noise generator, which  was better than the Mac or PC but still very much of the 8-bit era: the MSX and 128K ZX Spectrum had the same  chip, and the Commodore 64`s SID was far superior. The ST also came equipped with MIDI ports as standart, which  did mean it found a niche in music production - Cubase got its start here, for instance. But as far as native audio is concerned, these machines didn`t bring anything new - sound was a bit an afterthought. There would be later upgrades and expansions: Ad-Lib and SoundBlaster cards for the PC arrived by the end of the decade, and later Macintoshes and the Atari STE brought comparable upgrades to these platforms sound. But in 1985? There was only one exception. I`ve said it before, but Amiga was a bit of multimedia powerhouse - and, unlike its rivals, it had sound capability worthy of a new generation. It had a custom chip called Paula - responsible for the Ports, Audio, UART and Logic - and it was capable of 4 channels of 8-bit PCM audio, reading sound data direct from memory without taxing the CPU. By modern standarts, this is unremarkable - but for 1985, it was pretty revolutionary. Having such capabilities is one thing - exploiting them is another entirely. Upon its release, the Amiga had a desperate need for audio software, and Commodore were ill-equipped to supply it. They had planned a suite of productivity software for launch, but only a text editor and art package made it to release - TextCraft and CraphiCraft. There was a music application planned - predictably called MusiCraft, but it wasn`t finished and never saw the the light of day. A company called AEGIS bought the rights to MusiCraft however, and developed the software further, eventually releasing it as SONIX in 1986. Check out the boxart - how vaporwave is that?! Anyway, it was quite ambitios, incorporating a software synthesiser with a sequencer. Everything is represented with full musical score, keys and time signatures - so if you know music it`s a fairly natural environment to work with. The synthesiser is neat, perhaps not rhe easiest thing to use - while it can generate some interesting sounds, it`s primitive - it has quite a synthetic character. SONIX did see some use by early Amiga musicians - there are a few music disks that use the format, but it was quicly replaced by better alternatives over the next couple of years. Also releasing in 1986, Electronic Arts ported Will Harvey`s earlier Music Construction Set to the Macintosh and Amiga, and this new version was called Deluxe Music Construction Set. It lacked a programmable synthesiser but offered a full MIDI-compliant set of instruments, and had a similar notation-based interface to SONIX - driven by a window-based GUI, you could drag notes where you wanted them on the staves. Both SONIX and Deluxe Music Construction Set were welcome introductions for those wanting to make music with the Amiga in 1986, but they were far from a perfect solution. Their interfaces were clumsy, sacrificing speed and ease of use for traditional notation. The sounds they produced weren`t exactly spectacular, either. These early music packages had a critical flow - they were designed for musicians. This doesn`t seem like a bad thing on the face of it, but making music on these early machines was a two-part problem: First is creation, which these programs covered - but the second is playback. To be useful, you need to integrate closely with the sound hardware: You need to expose the potential of the machine directly, instead of trying to adapt it to a more conventional musical format. To accomplish this, you need a different approach. Most early computer musicians were programmers first, musicians second - effectively, they were directly instructing the sound hardware and developed custom tools and playback routines for that purpose. One example from 1986 is Chris Huelsbeck`s SoundMonitor for the Commodore 64. It was released as type-in program in German magazine 64`er: Enter five full pages of hexademical data without making a mistake, and a very capable piece of music software was your reward. SoundMonitor was not particularly easy to use, certainly not for beginners - but behind its spreadsheet-like interface lay the power of the Commodore 64`s SID, and with a little expertise you could make it do incredible things. It was to music editing what Vim or Emacs is to text editors: obtuse, inscrutable - but in the rigth hands, exremely powerful. Not only could you arrange notes, but you could shape their sound with envelopes, filters, pulse width modulation, vibrato - a far cry from simple beeps. There was also an arpeggio feature - with the SID`s 3 voice limitation, chords were quite challenging: with an arpeggio, you could play the chord notes in very rapid succession, giving an acoustic impression of the chord. It wasn`t a perfect rendition, but only occupied a single channel - and these arpeggiated chords have a very distinct sound, one very typical of SID music. Huelsbeck`s music for the Commodore 64 was used in a number of commercial games, and his work remains very well regarded. SoundMonitor served as a starting point for many other computer musicians, and the program inspired clones such as RockMonitor. It would also prove influential on other platfowms, most notably in tandem with the new potential of the Commodore Amiga. 
 
 8:39
